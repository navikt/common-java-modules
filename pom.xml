<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <name>Common Java Modules</name>
    <description>Felles java moduler for produktområde arbeidsoppfølging (POAO)</description>
    <url>https://github.com/navikt/common-java-modules</url>

    <groupId>no.nav.common</groupId>
    <artifactId>mor-pom</artifactId>
    <version>1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://opensource.org/licenses/MIT</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <organization>
                NAV (Arbeids- og velferdsdirektoratet) - The Norwegian Labour and Welfare Administration
            </organization>
            <organizationUrl>https://www.nav.no</organizationUrl>
        </developer>
    </developers>

    <modules>
        <module>abac</module>
        <module>audit-log</module>
        <module>auth</module>
        <module>client</module>
        <module>cxf</module>
        <module>feature-toggle</module>
        <module>json</module>
        <module>kafka</module>
        <module>log</module>
        <module>job</module>
        <module>metrics</module>
        <module>rest</module>
        <module>sts</module>
        <module>health</module>
        <module>test</module>
        <module>types</module>
        <module>util</module>
        <module>yaml</module>
        <module>nais</module>
        <module>token-client</module>
    </modules>

    <properties>
        <java.version>17</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.jacoco.reportPaths>${user.dir}/target/jacoco.exec</sonar.jacoco.reportPaths>

        <!-- LOGGING -->
        <slf4j.version>2.0.6</slf4j.version>
        <logback.version>1.4.5</logback.version>
        <logback-syslog4j.version>1.0.0</logback-syslog4j.version>
        <janino.version>3.1.9</janino.version>
        <logstash-logback.version>7.2</logstash-logback.version>

        <!-- CXF -->
        <cxf-jaxws-blueprint.version>7.0.1</cxf-jaxws-blueprint.version>
        <cxf-core.version>4.0.0</cxf-core.version>
        <jsoup.version>1.15.3</jsoup.version>

        <!-- COMMON -->
        <lombok.version>1.18.26</lombok.version>

        <!-- MISCELLANEOUS -->
        <jakarta.servlet.version>6.0.0</jakarta.servlet.version>
        <jakarta.ws.rs-api.version>3.1.0</jakarta.ws.rs-api.version>
        <spring.version>6.0.4</spring.version>
        <jersey.version>3.1.1</jersey.version>
        <jackson.version>2.14.2</jackson.version>
        <jackson-databind.version>2.14.2</jackson-databind.version>
        <jaxb-api.version>2.4.0-b180830.0359</jaxb-api.version>
        <micrometer.version>1.10.3</micrometer.version>
        <okhttp.version>4.10.0</okhttp.version>
        <prometheus.version>0.16.0</prometheus.version>
        <commons-lang.version>3.12.0</commons-lang.version>
        <commons-io.version>2.11.0</commons-io.version>
        <shedlock.version>4.44.0</shedlock.version>
        <handlebars.version>4.3.0</handlebars.version>
        <gson.version>2.10.1</gson.version>
        <caffeine.version>3.1.2</caffeine.version>
        <bitbucket-jose4.version>0.9.2</bitbucket-jose4.version>
        <nimbusds.version>10.5.1</nimbusds.version>
        <unleash.version>4.4.1</unleash.version>
        <org.json.version>20220924</org.json.version>
        <jetty.version>11.0.13</jetty.version>

        <!-- KAFKA -->
        <kafka.version>7.3.0-ccs</kafka.version>
        <avro.version>1.11.1</avro.version>
        <avro-serializer.version>7.3.1</avro-serializer.version>
        <json-schema-validation.version>1.12.2</json-schema-validation.version>

        <!-- TEST -->
        <assertj.version>3.24.2</assertj.version>
        <hamcrest.version>2.2</hamcrest.version>
        <junit.version>4.13.2</junit.version>
        <mockito.version>5.1.1</mockito.version>
        <junit.jupiter.version>5.9.2</junit.jupiter.version>
        <wiremock.version>2.27.2</wiremock.version>
        <testcontainers.version>1.17.6</testcontainers.version>
        <h2.version>1.4.200</h2.version>
        <postgres.version>42.5.3</postgres.version>
    </properties>


    <dependencyManagement>
        <dependencies>
            <!--
                Dette er en midlertidig patch, i nyere versjoner av f.eks org.apache.cxf:cxf-rt-ws-security
                så trengs forhåpentligvis ikke dette.
            -->
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>3.2.2</version>
            </dependency>

            <dependency>
                <groupId>com.sun.xml.fastinfoset</groupId>
                <artifactId>FastInfoset</artifactId>
                <version>1.2.15</version>
            </dependency>
            <dependency>
                <groupId>com.sun.istack</groupId>
                <artifactId>istack-commons-runtime</artifactId>
                <version>3.0.7</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jaxb</groupId>
                <artifactId>jaxb-runtime</artifactId>
                <version>4.0.2</version>
            </dependency>

            <!-- START COMMON -->
            <dependency>
                <groupId>no.nav.common</groupId>
                <artifactId>job</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>no.nav.common</groupId>
                <artifactId>log</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>no.nav.common</groupId>
                <artifactId>util</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>no.nav.common</groupId>
                <artifactId>client</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>no.nav.common</groupId>
                <artifactId>feature-toggle</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>no.nav.common</groupId>
                <artifactId>metrics</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>no.nav.common</groupId>
                <artifactId>metrics</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>no.nav.common</groupId>
                <artifactId>auth</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>no.nav.common</groupId>
                <artifactId>auth</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>no.nav.common</groupId>
                <artifactId>sts</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>no.nav.common</groupId>
                <artifactId>json</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>no.nav.common</groupId>
                <artifactId>kafka</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>no.nav.common</groupId>
                <artifactId>json</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
                <type>test-jar</type>
            </dependency>
            <dependency>
                <groupId>no.nav.common</groupId>
                <artifactId>yaml</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>no.nav.common</groupId>
                <artifactId>rest</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>no.nav.common</groupId>
                <artifactId>abac</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>no.nav.common</groupId>
                <artifactId>types</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>no.nav.common</groupId>
                <artifactId>health</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>no.nav.common</groupId>
                <artifactId>token-client</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>no.nav.common</groupId>
                <artifactId>test</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>no.nav.common</groupId>
                <artifactId>test</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>no.nav.common</groupId>
                <artifactId>cxf</artifactId>
                <version>${project.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>no.nav.common</groupId>
                <artifactId>nais</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- SLUTT COMMON -->

            <!-- spring -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.version}</version>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${spring.version}</version>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- jersey/jackson -->
            <dependency>
                <groupId>jakarta.ws.rs</groupId>
                <artifactId>jakarta.ws.rs-api</artifactId>
                <version>${jakarta.ws.rs-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.containers</groupId>
                <artifactId>jersey-container-servlet-core</artifactId>
                <version>${jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-server</artifactId>
                <version>${jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.inject</groupId>
                <artifactId>jersey-hk2</artifactId>
                <version>${jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-json-jackson</artifactId>
                <scope>runtime</scope>
                <version>${jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.connectors</groupId>
                <artifactId>jersey-apache-connector</artifactId>
                <version>${jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>${jaxb-api.version}</version>
            </dependency>

            <!-- Jackson -->
            <dependency>
                <groupId>com.fasterxml.jackson.jakarta.rs</groupId>
                <artifactId>jackson-jakarta-rs-json-provider</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson-databind.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jdk8</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-yaml</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>org.json</groupId>
                <artifactId>json</artifactId>
                <version>${org.json.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.everit-org.json-schema</groupId>
                <artifactId>org.everit.json.schema</artifactId>
                <version>${json-schema-validation.version}</version>
            </dependency>

            <!--Logging-->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>com.papertrailapp</groupId>
                <artifactId>logback-syslog4j</artifactId>
                <version>${logback-syslog4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.janino</groupId>
                <artifactId>janino</artifactId>
                <version>${janino.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash-logback.version}</version>
            </dependency>

            <!-- Prometheus -->
            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient_logback</artifactId>
                <version>${prometheus.version}</version>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-core</artifactId>
                <version>${micrometer.version}</version>
            </dependency>


            <!-- annet -->
            <dependency>
                <groupId>com.nimbusds</groupId>
                <artifactId>oauth2-oidc-sdk</artifactId>
                <version>${nimbusds.version}</version>
            </dependency>
            <dependency>
                <groupId>no.finn.unleash</groupId>
                <artifactId>unleash-client-java</artifactId>
                <version>${unleash.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bitbucket.b_c</groupId>
                <artifactId>jose4j</artifactId>
                <version>${bitbucket-jose4.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.jknack</groupId>
                <artifactId>handlebars</artifactId>
                <version>${handlebars.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.ben-manes.caffeine</groupId>
                <artifactId>caffeine</artifactId>
                <version>${caffeine.version}</version>
            </dependency>
            <dependency>
                <groupId>net.javacrumbs.shedlock</groupId>
                <artifactId>shedlock-core</artifactId>
                <version>${shedlock.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro</artifactId>
                <version>${avro.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-avro-serializer</artifactId>
                <version>${avro-serializer.version}</version>
            </dependency>

            <!-- jetty -->
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-server</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-webapp</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-servlet</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-annotations</artifactId>
                <version>${jetty.version}</version>
            </dependency>

            <!-- SOAP -->
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-core</artifactId>
                <version>${cxf-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-ws-policy</artifactId>
                <version>${cxf-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-transports-http</artifactId>
                <version>${cxf-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-bindings-soap</artifactId>
                <version>${cxf-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-ws-security</artifactId>
                <version>${cxf-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-features-logging</artifactId>
                <version>${cxf-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-frontend-jaxws</artifactId>
                <version>${cxf-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-frontend-simple</artifactId>
                <version>${cxf-core.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>${jsoup.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.servlet</groupId>
                <artifactId>jakarta.servlet-api</artifactId>
                <version>${jakarta.servlet.version}</version>
            </dependency>

            <!--Testing-->
            <dependency>
                <groupId>org.apache.servicemix.examples</groupId>
                <artifactId>cxf-jaxws-blueprint</artifactId>
                <version>${cxf-jaxws-blueprint.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>*</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>mockwebserver</artifactId>
                <version>${okhttp.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.github.tomakehurst</groupId>
                <artifactId>wiremock-standalone</artifactId>
                <version>${wiremock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.vintage</groupId>
                <artifactId>junit-vintage-engine</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-core</artifactId>
                <version>${hamcrest.version}</version>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>kafka</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>postgresql</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgres.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>4.2.0</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>

                <!-- CORE PLUGINS -->

                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.10.0</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.2.1</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>test-jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.3.0</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>test-jar</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.1</version>
                <configuration>
                    <destFile>${sonar.jacoco.reportPaths}</destFile>
                    <append>true</append>
                </configuration>
                <executions>
                    <execution>
                        <id>jacoco-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <propertyName>jacoco.agent.argLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>pre-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>post-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M8</version>
                <configuration>
                    <!-- Ellers vil maven kun kjøre tester som slutter på 'Test' (!) -->
                    <includes>
                        <include>*</include>
                    </includes>

                    <!--
                    Å sette `reuseFork` til `true` vil føre til at surefire fyrer opp en separat JVM for hver
                    eneste testklasse.

                    Dette fører til ekstremt treg eksekvering av tester (i ett tilfelle 4-5 min kontra
                    20-30 sekunder om satt til `false`)

                    Merk at å sette denne til `true` krever at man skriver tester som er godt isolerte fra hverandre.
                    F.eks. kan det føre til problemer å sette statiske eller globale felter i klasser
                    som gjenbrukes på tvers av testmetoder. Sørg for å lage en ny instanse av slike felter for hver
                    testmetode ved bruk av @BeforeEach (JUnit 5) eller lignende for å unngå tilstandsfulle testklasser.

                    Se følgende link for flere detaljer:

                    https://maven.apache.org/surefire/maven-surefire-plugin/examples/ fork-options-and-parallel-execution.html

                    -->
                    <reuseForks>true</reuseForks>

                    <forkCount>1C</forkCount> <!-- fyr opp 1 JVM per cpu-kjerne -->

                    <argLine>-Xmx1024m</argLine> <!-- Gi nok minne for å unngå terminerende JVM-er -->

                    <!-- fjerner edge-caser ved nøstede classloadere, som f.eks. hvis man tester med jetty -->
                    <useSystemClassLoader>false</useSystemClassLoader>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>3.1.1</version>
                        <configuration>
                            <source>${java.version}</source>
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
