{
  "definitions": {
    "Comparable": {
      "type": "object"
    },
    "DateDTO": {
      "type": "object",
      "properties": {
        "aBoolean": {
          "type": "boolean"
        },
        "date": {
          "format": "date-time",
          "type": "string"
        },
        "localDate": {
          "format": "date",
          "type": "string"
        },
        "localDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "noOptionalDate": {
          "format": "date-time",
          "type": "string"
        },
        "optionalDate": {
          "format": "date-time",
          "type": "string"
        },
        "sqlDate": {
          "format": "date-time",
          "type": "string"
        },
        "string": {
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "zonedDateTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Dynamic": {
      "type": "object",
      "properties": {
        "className": {
          "type": "string"
        },
        "initParameters": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "mappings": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "runAsRole": {
          "type": "string"
        }
      }
    },
    "EntityTag": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "weak": {
          "type": "boolean"
        }
      }
    },
    "EnumDTO": {
      "type": "object",
      "properties": {
        "enEnum": {
          "enum": [
            "ABC",
            "DEF",
            "GHI"
          ],
          "type": "string"
        },
        "enums": {
          "items": {
            "enum": [
              "ABC",
              "DEF",
              "GHI"
            ],
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "FeedAuthorizationModule": {
      "type": "object"
    },
    "FeedConsumer": {
      "type": "object",
      "properties": {
        "authorizationModule": {
          "$ref": "#/definitions/FeedAuthorizationModule"
        }
      }
    },
    "FeedConsumerComparable": {
      "type": "object",
      "properties": {
        "authorizationModule": {
          "$ref": "#/definitions/FeedAuthorizationModule"
        }
      }
    },
    "FeedController": {
      "type": "object",
      "properties": {
        "feedNames": {
          "$ref": "#/definitions/Response"
        },
        "feeds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "FeedElement": {
      "type": "object",
      "properties": {
        "element": {
          "$ref": "#/definitions/Comparable"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "FeedElementComparable": {
      "type": "object",
      "properties": {
        "element": {
          "$ref": "#/definitions/Comparable"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "FeedElementObject": {
      "type": "object",
      "properties": {
        "element": {
          "properties": {},
          "type": "object"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "FeedProducer": {
      "type": "object",
      "properties": {
        "authorizationModule": {
          "$ref": "#/definitions/FeedAuthorizationModule"
        }
      }
    },
    "FeedProducerComparable": {
      "type": "object",
      "properties": {
        "authorizationModule": {
          "$ref": "#/definitions/FeedAuthorizationModule"
        }
      }
    },
    "FeedResponse": {
      "type": "object",
      "properties": {
        "elements": {
          "items": {
            "$ref": "#/definitions/FeedElementComparable"
          },
          "type": "array"
        },
        "nextPageId": {
          "type": "string"
        }
      }
    },
    "FeedResponseObject": {
      "type": "object",
      "properties": {
        "elements": {
          "items": {
            "$ref": "#/definitions/FeedElementObject"
          },
          "type": "array"
        },
        "nextPageId": {
          "type": "string"
        }
      }
    },
    "FeedWebhookRequest": {
      "type": "object",
      "properties": {
        "callbackUrl": {
          "type": "string"
        }
      }
    },
    "Link": {
      "type": "object",
      "properties": {
        "params": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "rel": {
          "type": "string"
        },
        "rels": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "uri": {
          "format": "uri",
          "type": "string"
        },
        "uriBuilder": {
          "$ref": "#/definitions/UriBuilder"
        }
      }
    },
    "Locale": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string"
        },
        "displayCountry": {
          "type": "string"
        },
        "displayLanguage": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "displayScript": {
          "type": "string"
        },
        "displayVariant": {
          "type": "string"
        },
        "extensionKeys": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "iso3Country": {
          "type": "string"
        },
        "iso3Language": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "script": {
          "type": "string"
        },
        "unicodeLocaleAttributes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "unicodeLocaleKeys": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "variant": {
          "type": "string"
        }
      }
    },
    "MediaType": {
      "type": "object",
      "properties": {
        "parameters": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "subtype": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "wildcardSubtype": {
          "type": "boolean"
        },
        "wildcardType": {
          "type": "boolean"
        }
      }
    },
    "NewCookie": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "expiry": {
          "format": "date-time",
          "type": "string"
        },
        "httpOnly": {
          "type": "boolean"
        },
        "maxAge": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "secure": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        },
        "version": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "QueryDTO": {
      "type": "object",
      "properties": {
        "date": {
          "format": "date-time",
          "type": "string"
        },
        "localDate": {
          "format": "date",
          "type": "string"
        },
        "localDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "sqlDate": {
          "format": "date-time",
          "type": "string"
        },
        "string": {
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "zonedDateTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Response": {
      "type": "object",
      "properties": {
        "allowedMethods": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "cookies": {
          "additionalProperties": {
            "$ref": "#/definitions/NewCookie"
          },
          "type": "object"
        },
        "date": {
          "format": "date-time",
          "type": "string"
        },
        "entity": {
          "properties": {},
          "type": "object"
        },
        "entityTag": {
          "$ref": "#/definitions/EntityTag"
        },
        "headers": {
          "additionalProperties": {
            "items": {
              "properties": {},
              "type": "object"
            },
            "type": "array"
          },
          "type": "object"
        },
        "language": {
          "$ref": "#/definitions/Locale"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "length": {
          "format": "int32",
          "type": "integer"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/Link"
          },
          "type": "array",
          "uniqueItems": true
        },
        "location": {
          "format": "uri",
          "type": "string"
        },
        "mediaType": {
          "$ref": "#/definitions/MediaType"
        },
        "metadata": {
          "additionalProperties": {
            "items": {
              "properties": {},
              "type": "object"
            },
            "type": "array"
          },
          "type": "object"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "statusInfo": {
          "$ref": "#/definitions/StatusType"
        },
        "stringHeaders": {
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "type": "object"
        }
      }
    },
    "RiktObjekt": {
      "type": "object",
      "properties": {
        "bool": {
          "type": "boolean"
        },
        "dato": {
          "format": "date-time",
          "type": "string"
        },
        "enEnum": {
          "enum": [
            "EN",
            "TO",
            "TRE"
          ],
          "type": "string"
        },
        "string": {
          "type": "string"
        },
        "tall": {
          "format": "int64",
          "type": "integer"
        },
        "zonedDateTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "StatusType": {
      "type": "object",
      "properties": {
        "family": {
          "enum": [
            "INFORMATIONAL",
            "SUCCESSFUL",
            "REDIRECTION",
            "CLIENT_ERROR",
            "SERVER_ERROR",
            "OTHER"
          ],
          "type": "string"
        },
        "reasonPhrase": {
          "type": "string"
        },
        "statusCode": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "TallRessurs": {
      "type": "object"
    },
    "UriBuilder": {
      "type": "object"
    }
  },
  "paths": {
    "/dato/dto": {
      "get": {
        "operationId": "getDTO",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/DateDTO"
            }
          }
        }
      }
    },
    "/dato/query": {
      "get": {
        "operationId": "queryDTO",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "localDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "localDateTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "sqlDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "string",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "zonedDateTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/DateDTO"
            }
          }
        }
      },
      "post": {
        "operationId": "postQueryDTO",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/DateDTO"
            }
          }
        }
      }
    },
    "/eksempel": {
      "get": {
        "operationId": "get",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/eksempel/konflikt": {
      "get": {
        "operationId": "konflikt",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/eksempel/pipe": {
      "put": {
        "operationId": "pipeData",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "properties": {},
                "type": "object"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "additionalProperties": {
                "properties": {},
                "type": "object"
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/eksempel/spesial-feil": {
      "get": {
        "operationId": "spesialFeil",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/eksempel/swagger": {
      "get": {
        "description": "eksempel-notes",
        "operationId": "medEksplisittDokumentasjon",
        "parameters": [
          {
            "name": "CUSTOM_HEADER",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "1234": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        },
        "summary": "eksempel-value",
        "tags": [
          "Eksempel"
        ]
      },
      "head": {
        "operationId": "medDefaultDokumentasjon",
        "parameters": [
          {
            "name": "implisitt-parameter",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Eksempel"
        ]
      },
      "post": {
        "operationId": "rikRespons",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RiktObjekt"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RiktObjekt"
            }
          }
        },
        "tags": [
          "Eksempel"
        ]
      }
    },
    "/eksempel/tall/{grunnTall}/minus/{tall}": {
      "get": {
        "operationId": "minus",
        "parameters": [
          {
            "name": "tall",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "grunnTall",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/eksempel/tall/{grunnTall}/pluss/{tall}": {
      "get": {
        "operationId": "pluss",
        "parameters": [
          {
            "name": "tall",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "grunnTall",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/eksempel/ukjent-feil": {
      "get": {
        "operationId": "ukjentFeil",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/enum": {
      "get": {
        "operationId": "getEnumer",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "items": {
                "enum": [
                  "ABC",
                  "DEF",
                  "GHI"
                ],
                "type": "string"
              },
              "type": "array"
            }
          }
        }
      },
      "post": {
        "operationId": "pipeDto",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EnumDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/EnumDTO"
            }
          }
        }
      },
      "put": {
        "operationId": "pipeEnum",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "enum": [
                "ABC",
                "DEF",
                "GHI"
              ],
              "type": "string"
            }
          }
        }
      }
    },
    "/enum/dto/{ordinal}": {
      "get": {
        "operationId": "dtoForOrdinal",
        "parameters": [
          {
            "name": "ordinal",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/EnumDTO"
            }
          }
        }
      }
    },
    "/enum/{ordinal}": {
      "get": {
        "operationId": "enumForOrdinal",
        "parameters": [
          {
            "name": "ordinal",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "enum": [
                "ABC",
                "DEF",
                "GHI"
              ],
              "type": "string"
            }
          }
        }
      }
    },
    "/feed": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getFeeds",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        }
      }
    },
    "/feed/feedname": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getFeedNames",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/feed/{name}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getFeeddata",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/FeedResponseObject"
            }
          }
        }
      },
      "head": {
        "consumes": [
          "application/json"
        ],
        "operationId": "webhookCallback",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/feed/{name}/webhook": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "operationId": "registerWebhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FeedWebhookRequest"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/inject": {
      "get": {
        "operationId": "get",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/inject/service": {
      "get": {
        "operationId": "getService",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/interface/default": {
      "get": {
        "operationId": "defaultGet",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/interface/impl": {
      "get": {
        "operationId": "implementertGet",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/ioc": {
      "get": {
        "operationId": "testIoc",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/openam": {
      "get": {
        "operationId": "getIdent",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "operationId": "ping",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/redirect": {
      "get": {
        "operationId": "redirect",
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/server": {
      "get": {
        "operationId": "largeResponse",
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/session": {
      "get": {
        "operationId": "getSesjonsId",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/swagger.json": {
      "get": {
        "operationId": "getSwaggerJSON",
        "parameters": [
          {
            "name": "ikke_berik",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/toggled": {
      "get": {
        "operationId": "isActive",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    }
  },
  "swagger": "2.0",
  "tags": [
    {
      "name": "Eksempel"
    }
  ]
}
