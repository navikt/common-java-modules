name: Test, build and publish

on: push

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Set up cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Run tests
        env:
          FASIT_MOCK_ENABLED: true
        run: mvn -q -B -V verify -Plokal | grep -v ERROR

  build-and-publish:
    name: Build and push
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Set up cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Setup variables
        run: |
          echo ::set-env name=TIME::$(TZ="Europe/Oslo" date +%Y.%m.%d-%H.%M)
          echo ::set-env name=COMMIT::$(git rev-parse --short=12 HEAD)
          echo ::set-env name=VERSION::"1.$TIME-$COMMIT"

      - name: Release Maven package
        uses: samuelmeuli/action-maven-publish@v1
        with:
          maven_goals_phases: versions:set versions:commit deploy
          maven_args: -Prelease -DskipTests=true -DnewVersion="$VERSION"
          gpg_private_key: ${{ secrets.GPG_KEYS }}
          gpg_passphrase: ${{ secrets.GPG_PASSPHRASE }}
          nexus_username: ${{ secrets.SONATYPE_USER }}
          nexus_password: ${{ secrets.SONATYPE_PASSWORD }}

      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release/${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }} to maven central
          prerelease: false
